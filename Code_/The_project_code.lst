;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 8/7/2024 1:51:30 AM
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0x289B      	GOTO       155
_interrupt:
0x0004	0x00FF      	MOVWF      R15
0x0005	0x0E03      	SWAPF      STATUS, 0
0x0006	0x0183      	CLRF       STATUS
0x0007	0x00AF      	MOVWF      ___saveSTATUS
0x0008	0x080A      	MOVF       PCLATH, 0
0x0009	0x00B0      	MOVWF      ___savePCLATH
0x000A	0x018A      	CLRF       PCLATH
;The_project_code.c,57 :: 		void interrupt()
;The_project_code.c,61 :: 		if(RBIF_BIT == 1)
0x000B	0x1C0B      	BTFSS      RBIF_bit, BitPos(RBIF_bit+0)
0x000C	0x2816      	GOTO       L_interrupt14
;The_project_code.c,63 :: 		x = portB;
0x000D	0x0806      	MOVF       PORTB, 0
0x000E	0x00AA      	MOVWF      _x
;The_project_code.c,64 :: 		RBIF_BIT = 0 ;
0x000F	0x100B      	BCF        RBIF_bit, BitPos(RBIF_bit+0)
;The_project_code.c,66 :: 		if(portB.b6 == 0 && portA.b0 == 0)
0x0010	0x1B06      	BTFSC      PORTB, 6
0x0011	0x2816      	GOTO       L_interrupt17
0x0012	0x1805      	BTFSC      PORTA, 0
0x0013	0x2816      	GOTO       L_interrupt17
L__interrupt46:
;The_project_code.c,68 :: 		flag = 1;
0x0014	0x3001      	MOVLW      1
0x0015	0x00AC      	MOVWF      _flag
;The_project_code.c,69 :: 		}
L_interrupt17:
;The_project_code.c,70 :: 		}
L_interrupt14:
;The_project_code.c,71 :: 		}
L_end_interrupt:
L__interrupt49:
0x0016	0x0830      	MOVF       ___savePCLATH, 0
0x0017	0x008A      	MOVWF      PCLATH
0x0018	0x0E2F      	SWAPF      ___saveSTATUS, 0
0x0019	0x0083      	MOVWF      STATUS
0x001A	0x0EFF      	SWAPF      R15, 1
0x001B	0x0E7F      	SWAPF      R15, 0
0x001C	0x0009      	RETFIE
; end of _interrupt
_Div_8X8_U:
;__Lib_Math.c,189 :: 		
;__Lib_Math.c,196 :: 		
0x001D	0x1283      	BCF        STATUS, 5
;__Lib_Math.c,197 :: 		
0x001E	0x1303      	BCF        STATUS, 6
;__Lib_Math.c,198 :: 		
0x001F	0x01F8      	CLRF       R8
;__Lib_Math.c,199 :: 		
0x0020	0x3008      	MOVLW      8
;__Lib_Math.c,200 :: 		
0x0021	0x00FC      	MOVWF      R12
;__Lib_Math.c,201 :: 		
0x0022	0x0D70      	RLF        R0, 0
;__Lib_Math.c,202 :: 		
0x0023	0x0DF8      	RLF        R8, 1
;__Lib_Math.c,203 :: 		
0x0024	0x0874      	MOVF       R4, 0
;__Lib_Math.c,204 :: 		
0x0025	0x02F8      	SUBWF      R8, 1
;__Lib_Math.c,205 :: 		
0x0026	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,206 :: 		
0x0027	0x282A      	GOTO       $+3
;__Lib_Math.c,207 :: 		
0x0028	0x07F8      	ADDWF      R8, 1
;__Lib_Math.c,208 :: 		
0x0029	0x1003      	BCF        STATUS, 0
;__Lib_Math.c,209 :: 		
0x002A	0x0DF0      	RLF        R0, 1
;__Lib_Math.c,210 :: 		
0x002B	0x0BFC      	DECFSZ     R12, 1
;__Lib_Math.c,211 :: 		
0x002C	0x2822      	GOTO       $-10
;__Lib_Math.c,213 :: 		
L_end_Div_8X8_U:
0x002D	0x0008      	RETURN
; end of _Div_8X8_U
_____DoICP:
;__Lib_System.c,6 :: 		
;__Lib_System.c,9 :: 		
0x002E	0x1283      	BCF        STATUS, 5
0x002F	0x1303      	BCF        STATUS, 6
0x0030	0x0827      	MOVF       ___DoICPAddr+1, 0
0x0031	0x008A      	MOVWF      PCLATH
;__Lib_System.c,10 :: 		
0x0032	0x0826      	MOVF       ___DoICPAddr, 0
0x0033	0x0082      	MOVWF      PCL
;__Lib_System.c,12 :: 		
L_end_____DoICP:
0x0034	0x0008      	RETURN
; end of _____DoICP
___CC2DW:
;__Lib_System.c,134 :: 		
;__Lib_System.c,137 :: 		
_CC2D_Loop1:
;__Lib_System.c,139 :: 		
0x0035	0x202E      	CALL       _____DoICP
0x0036	0x118A      	BCF        PCLATH, 3
0x0037	0x120A      	BCF        PCLATH, 4
;__Lib_System.c,141 :: 		
0x0038	0x0080      	MOVWF      INDF
;__Lib_System.c,142 :: 		
0x0039	0x0A84      	INCF       FSR, 1
;__Lib_System.c,143 :: 		
0x003A	0x0AA6      	INCF       ___DoICPAddr, 1
;__Lib_System.c,145 :: 		
0x003B	0x1903      	BTFSC      STATUS, 2
;__Lib_System.c,146 :: 		
0x003C	0x0AA7      	INCF       ___DoICPAddr+1, 1
;__Lib_System.c,147 :: 		
0x003D	0x03F0      	DECF       R0, 1
;__Lib_System.c,149 :: 		
0x003E	0x1D03      	BTFSS      STATUS, 2
;__Lib_System.c,150 :: 		
0x003F	0x2835      	GOTO       _CC2D_Loop1
;__Lib_System.c,152 :: 		
L_end___CC2DW:
0x0040	0x0008      	RETURN
; end of ___CC2DW
_Switch:
;The_project_code.c,10 :: 		void Switch()
;The_project_code.c,12 :: 		if (portB == south_R_west_G)
0x0041	0x1283      	BCF        STATUS, 5
0x0042	0x1303      	BCF        STATUS, 6
0x0043	0x0806      	MOVF       PORTB, 0
0x0044	0x0624      	XORWF      _south_R_west_G, 0
0x0045	0x1D03      	BTFSS      STATUS, 2
0x0046	0x284B      	GOTO       L_Switch0
;The_project_code.c,14 :: 		portB =  south_R_west_Y;
0x0047	0x0823      	MOVF       _south_R_west_Y, 0
0x0048	0x0086      	MOVWF      PORTB
;The_project_code.c,15 :: 		switch_flag = 0;
0x0049	0x01A1      	CLRF       _switch_flag
;The_project_code.c,16 :: 		}
0x004A	0x2853      	GOTO       L_Switch1
L_Switch0:
;The_project_code.c,17 :: 		else if(portB == south_G_west_R)
0x004B	0x0806      	MOVF       PORTB, 0
0x004C	0x0620      	XORWF      _south_G_west_R, 0
0x004D	0x1D03      	BTFSS      STATUS, 2
0x004E	0x2853      	GOTO       L_Switch2
;The_project_code.c,19 :: 		portB = south_Y_west_R;
0x004F	0x0822      	MOVF       _south_Y_west_R, 0
0x0050	0x0086      	MOVWF      PORTB
;The_project_code.c,20 :: 		switch_flag = 1;
0x0051	0x3001      	MOVLW      1
0x0052	0x00A1      	MOVWF      _switch_flag
;The_project_code.c,21 :: 		}
L_Switch2:
L_Switch1:
;The_project_code.c,23 :: 		for(j = 3; j > 0; j--)
0x0053	0x3003      	MOVLW      3
0x0054	0x00A5      	MOVWF      _j
L_Switch3:
0x0055	0x0825      	MOVF       _j, 0
0x0056	0x3C00      	SUBLW      0
0x0057	0x1803      	BTFSC      STATUS, 0
0x0058	0x288A      	GOTO       L_Switch4
;The_project_code.c,26 :: 		for(i = 0; i < 5; i++)
0x0059	0x01A8      	CLRF       _i
L_Switch6:
0x005A	0x3005      	MOVLW      5
0x005B	0x0228      	SUBWF      _i, 0
0x005C	0x1803      	BTFSC      STATUS, 0
0x005D	0x2888      	GOTO       L_Switch7
;The_project_code.c,28 :: 		left = j / 10;      // 15 --> 15 / 10 = 1
0x005E	0x300A      	MOVLW      10
0x005F	0x00F4      	MOVWF      R4
0x0060	0x0825      	MOVF       _j, 0
0x0061	0x00F0      	MOVWF      R0
0x0062	0x201D      	CALL       _Div_8X8_U
0x0063	0x0870      	MOVF       R0, 0
0x0064	0x00AE      	MOVWF      _left
;The_project_code.c,29 :: 		right = j % 10;     // 15 --> 15 % 10 = 5
0x0065	0x300A      	MOVLW      10
0x0066	0x00F4      	MOVWF      R4
0x0067	0x0825      	MOVF       _j, 0
0x0068	0x00F0      	MOVWF      R0
0x0069	0x201D      	CALL       _Div_8X8_U
0x006A	0x0878      	MOVF       R8, 0
0x006B	0x00F0      	MOVWF      R0
0x006C	0x0870      	MOVF       R0, 0
0x006D	0x00AD      	MOVWF      _right
;The_project_code.c,30 :: 		portD = 0b00000001;
0x006E	0x3001      	MOVLW      1
0x006F	0x0088      	MOVWF      PORTD
;The_project_code.c,31 :: 		portC = right;
0x0070	0x0870      	MOVF       R0, 0
0x0071	0x0087      	MOVWF      PORTC
;The_project_code.c,32 :: 		delay_ms(15);
0x0072	0x3027      	MOVLW      39
0x0073	0x00FC      	MOVWF      R12
0x0074	0x30F5      	MOVLW      245
0x0075	0x00FD      	MOVWF      R13
L_Switch9:
0x0076	0x0BFD      	DECFSZ     R13, 1
0x0077	0x2876      	GOTO       L_Switch9
0x0078	0x0BFC      	DECFSZ     R12, 1
0x0079	0x2876      	GOTO       L_Switch9
;The_project_code.c,33 :: 		portD = 0b00000010;
0x007A	0x3002      	MOVLW      2
0x007B	0x0088      	MOVWF      PORTD
;The_project_code.c,34 :: 		portC = left;
0x007C	0x082E      	MOVF       _left, 0
0x007D	0x0087      	MOVWF      PORTC
;The_project_code.c,35 :: 		delay_ms(15);
0x007E	0x3027      	MOVLW      39
0x007F	0x00FC      	MOVWF      R12
0x0080	0x30F5      	MOVLW      245
0x0081	0x00FD      	MOVWF      R13
L_Switch10:
0x0082	0x0BFD      	DECFSZ     R13, 1
0x0083	0x2882      	GOTO       L_Switch10
0x0084	0x0BFC      	DECFSZ     R12, 1
0x0085	0x2882      	GOTO       L_Switch10
;The_project_code.c,26 :: 		for(i = 0; i < 5; i++)
0x0086	0x0AA8      	INCF       _i, 1
;The_project_code.c,36 :: 		}
0x0087	0x285A      	GOTO       L_Switch6
L_Switch7:
;The_project_code.c,23 :: 		for(j = 3; j > 0; j--)
0x0088	0x03A5      	DECF       _j, 1
;The_project_code.c,37 :: 		}
0x0089	0x2855      	GOTO       L_Switch3
L_Switch4:
;The_project_code.c,40 :: 		if (portB == south_R_west_Y)
0x008A	0x0806      	MOVF       PORTB, 0
0x008B	0x0623      	XORWF      _south_R_west_Y, 0
0x008C	0x1D03      	BTFSS      STATUS, 2
0x008D	0x2892      	GOTO       L_Switch11
;The_project_code.c,42 :: 		portB = south_G_west_R;
0x008E	0x0820      	MOVF       _south_G_west_R, 0
0x008F	0x0086      	MOVWF      PORTB
;The_project_code.c,43 :: 		switch_flag = 0;
0x0090	0x01A1      	CLRF       _switch_flag
;The_project_code.c,44 :: 		}
0x0091	0x289A      	GOTO       L_Switch12
L_Switch11:
;The_project_code.c,46 :: 		else if(portB == south_Y_west_R)
0x0092	0x0806      	MOVF       PORTB, 0
0x0093	0x0622      	XORWF      _south_Y_west_R, 0
0x0094	0x1D03      	BTFSS      STATUS, 2
0x0095	0x289A      	GOTO       L_Switch13
;The_project_code.c,48 :: 		portB = south_R_west_G;
0x0096	0x0824      	MOVF       _south_R_west_G, 0
0x0097	0x0086      	MOVWF      PORTB
;The_project_code.c,49 :: 		switch_flag = 1;
0x0098	0x3001      	MOVLW      1
0x0099	0x00A1      	MOVWF      _switch_flag
;The_project_code.c,50 :: 		}
L_Switch13:
L_Switch12:
;The_project_code.c,52 :: 		}
L_end_Switch:
0x009A	0x0008      	RETURN
; end of _Switch
_main:
0x009B	0x3021      	MOVLW      33
0x009C	0x1283      	BCF        STATUS, 5
0x009D	0x1303      	BCF        STATUS, 6
0x009E	0x00A0      	MOVWF      _south_G_west_R
0x009F	0x3005      	MOVLW      5
0x00A0	0x00A1      	MOVWF      _switch_flag
0x00A1	0x3011      	MOVLW      17
0x00A2	0x00A2      	MOVWF      _south_Y_west_R
0x00A3	0x300A      	MOVLW      10
0x00A4	0x00A3      	MOVWF      _south_R_west_Y
0x00A5	0x300C      	MOVLW      12
0x00A6	0x00A4      	MOVWF      _south_R_west_G
;The_project_code.c,80 :: 		void main()
;The_project_code.c,82 :: 		adcon1 = 6;
0x00A7	0x3006      	MOVLW      6
0x00A8	0x1683      	BSF        STATUS, 5
0x00A9	0x009F      	MOVWF      ADCON1
;The_project_code.c,83 :: 		trisA.b4 = 1;
0x00AA	0x1605      	BSF        TRISA, 4
;The_project_code.c,84 :: 		trisA.b0 = 1;
0x00AB	0x1405      	BSF        TRISA, 0
;The_project_code.c,85 :: 		trisC = 0;
0x00AC	0x0187      	CLRF       TRISC
;The_project_code.c,86 :: 		portC = 0;
0x00AD	0x1283      	BCF        STATUS, 5
0x00AE	0x0187      	CLRF       PORTC
;The_project_code.c,87 :: 		trisD.b0 = 0;  trisD.b1 = 0;
0x00AF	0x1683      	BSF        STATUS, 5
0x00B0	0x1008      	BCF        TRISD, 0
0x00B1	0x1088      	BCF        TRISD, 1
;The_project_code.c,88 :: 		portD.b0 = 1;  portD.b1 = 1;
0x00B2	0x1283      	BCF        STATUS, 5
0x00B3	0x1408      	BSF        PORTD, 0
0x00B4	0x1488      	BSF        PORTD, 1
;The_project_code.c,89 :: 		trisB = 0b11000000;
0x00B5	0x30C0      	MOVLW      192
0x00B6	0x1683      	BSF        STATUS, 5
0x00B7	0x0086      	MOVWF      TRISB
;The_project_code.c,90 :: 		portB = 0;
0x00B8	0x1283      	BCF        STATUS, 5
0x00B9	0x0186      	CLRF       PORTB
;The_project_code.c,94 :: 		NOT_RBPU_BIT = 0; // Turn ON the internal feeding .. It zero because it's inverted
0x00BA	0x1683      	BSF        STATUS, 5
0x00BB	0x1381      	BCF        NOT_RBPU_bit, BitPos(NOT_RBPU_bit+0)
;The_project_code.c,96 :: 		x = portB;         // To remove the dismatch in the start of program
0x00BC	0x1283      	BCF        STATUS, 5
0x00BD	0x0806      	MOVF       PORTB, 0
0x00BE	0x00AA      	MOVWF      _x
;The_project_code.c,97 :: 		RBIF_BIT = 0;     // During the transformation from unknown to zero the IF be one
0x00BF	0x100B      	BCF        RBIF_bit, BitPos(RBIF_bit+0)
;The_project_code.c,98 :: 		GIE_BIT = 1; // Turn ON the Global Interrupt enable bit
0x00C0	0x178B      	BSF        GIE_bit, BitPos(GIE_bit+0)
;The_project_code.c,99 :: 		RBIE_BIT = 1; // Turn ON the Enable bit of bits B4 --> B7
0x00C1	0x158B      	BSF        RBIE_bit, BitPos(RBIE_bit+0)
;The_project_code.c,102 :: 		while(portA.B4 == 1);
L_main18:
0x00C2	0x1E05      	BTFSS      PORTA, 4
0x00C3	0x28C5      	GOTO       L_main19
0x00C4	0x28C2      	GOTO       L_main18
L_main19:
;The_project_code.c,104 :: 		loop_15s:
___main_loop_15s:
;The_project_code.c,105 :: 		for (counter = 15; counter > 0; counter--)
0x00C5	0x300F      	MOVLW      15
0x00C6	0x00A9      	MOVWF      _counter
L_main20:
0x00C7	0x0829      	MOVF       _counter, 0
0x00C8	0x3C00      	SUBLW      0
0x00C9	0x1803      	BTFSC      STATUS, 0
0x00CA	0x290F      	GOTO       L_main21
;The_project_code.c,107 :: 		if (flag)
0x00CB	0x082C      	MOVF       _flag, 0
0x00CC	0x1903      	BTFSC      STATUS, 2
0x00CD	0x28D5      	GOTO       L_main23
;The_project_code.c,109 :: 		flag = 0;
0x00CE	0x01AC      	CLRF       _flag
;The_project_code.c,110 :: 		Switch();
0x00CF	0x2041      	CALL       _Switch
;The_project_code.c,111 :: 		if(switch_flag)
0x00D0	0x0821      	MOVF       _switch_flag, 0
0x00D1	0x1903      	BTFSC      STATUS, 2
0x00D2	0x28D4      	GOTO       L_main24
;The_project_code.c,113 :: 		break;
0x00D3	0x290F      	GOTO       L_main21
;The_project_code.c,114 :: 		}
L_main24:
;The_project_code.c,117 :: 		goto loop_15s;
0x00D4	0x28C5      	GOTO       ___main_loop_15s
;The_project_code.c,119 :: 		}
L_main23:
;The_project_code.c,121 :: 		if (counter > 3) // First 12 s the south is green and west is red
0x00D5	0x0829      	MOVF       _counter, 0
0x00D6	0x3C03      	SUBLW      3
0x00D7	0x1803      	BTFSC      STATUS, 0
0x00D8	0x28DC      	GOTO       L_main26
;The_project_code.c,123 :: 		portB = south_G_west_R;
0x00D9	0x0820      	MOVF       _south_G_west_R, 0
0x00DA	0x0086      	MOVWF      PORTB
;The_project_code.c,124 :: 		}
0x00DB	0x28DE      	GOTO       L_main27
L_main26:
;The_project_code.c,128 :: 		portB = south_Y_west_R;
0x00DC	0x0822      	MOVF       _south_Y_west_R, 0
0x00DD	0x0086      	MOVWF      PORTB
;The_project_code.c,129 :: 		}
L_main27:
;The_project_code.c,131 :: 		for (sec = 0; sec < 5; sec++)
0x00DE	0x01AB      	CLRF       _sec
L_main28:
0x00DF	0x3005      	MOVLW      5
0x00E0	0x022B      	SUBWF      _sec, 0
0x00E1	0x1803      	BTFSC      STATUS, 0
0x00E2	0x290D      	GOTO       L_main29
;The_project_code.c,133 :: 		left = counter / 10;      // 15 --> 15 / 10 = 1
0x00E3	0x300A      	MOVLW      10
0x00E4	0x00F4      	MOVWF      R4
0x00E5	0x0829      	MOVF       _counter, 0
0x00E6	0x00F0      	MOVWF      R0
0x00E7	0x201D      	CALL       _Div_8X8_U
0x00E8	0x0870      	MOVF       R0, 0
0x00E9	0x00AE      	MOVWF      _left
;The_project_code.c,134 :: 		right = counter % 10;     // 15 --> 15 % 10 = 5
0x00EA	0x300A      	MOVLW      10
0x00EB	0x00F4      	MOVWF      R4
0x00EC	0x0829      	MOVF       _counter, 0
0x00ED	0x00F0      	MOVWF      R0
0x00EE	0x201D      	CALL       _Div_8X8_U
0x00EF	0x0878      	MOVF       R8, 0
0x00F0	0x00F0      	MOVWF      R0
0x00F1	0x0870      	MOVF       R0, 0
0x00F2	0x00AD      	MOVWF      _right
;The_project_code.c,135 :: 		portD = 0b00000001;
0x00F3	0x3001      	MOVLW      1
0x00F4	0x0088      	MOVWF      PORTD
;The_project_code.c,136 :: 		portC = right;
0x00F5	0x0870      	MOVF       R0, 0
0x00F6	0x0087      	MOVWF      PORTC
;The_project_code.c,137 :: 		delay_ms(15);
0x00F7	0x3027      	MOVLW      39
0x00F8	0x00FC      	MOVWF      R12
0x00F9	0x30F5      	MOVLW      245
0x00FA	0x00FD      	MOVWF      R13
L_main31:
0x00FB	0x0BFD      	DECFSZ     R13, 1
0x00FC	0x28FB      	GOTO       L_main31
0x00FD	0x0BFC      	DECFSZ     R12, 1
0x00FE	0x28FB      	GOTO       L_main31
;The_project_code.c,138 :: 		portD = 0b00000010;
0x00FF	0x3002      	MOVLW      2
0x0100	0x0088      	MOVWF      PORTD
;The_project_code.c,139 :: 		portC = left;
0x0101	0x082E      	MOVF       _left, 0
0x0102	0x0087      	MOVWF      PORTC
;The_project_code.c,140 :: 		delay_ms(15);
0x0103	0x3027      	MOVLW      39
0x0104	0x00FC      	MOVWF      R12
0x0105	0x30F5      	MOVLW      245
0x0106	0x00FD      	MOVWF      R13
L_main32:
0x0107	0x0BFD      	DECFSZ     R13, 1
0x0108	0x2907      	GOTO       L_main32
0x0109	0x0BFC      	DECFSZ     R12, 1
0x010A	0x2907      	GOTO       L_main32
;The_project_code.c,131 :: 		for (sec = 0; sec < 5; sec++)
0x010B	0x0AAB      	INCF       _sec, 1
;The_project_code.c,141 :: 		}
0x010C	0x28DF      	GOTO       L_main28
L_main29:
;The_project_code.c,105 :: 		for (counter = 15; counter > 0; counter--)
0x010D	0x03A9      	DECF       _counter, 1
;The_project_code.c,142 :: 		}
0x010E	0x28C7      	GOTO       L_main20
L_main21:
;The_project_code.c,144 :: 		loop_23s:
___main_loop_23s:
;The_project_code.c,145 :: 		for (counter = 23; counter > 0; counter--)
0x010F	0x3017      	MOVLW      23
0x0110	0x00A9      	MOVWF      _counter
L_main33:
0x0111	0x0829      	MOVF       _counter, 0
0x0112	0x3C00      	SUBLW      0
0x0113	0x1803      	BTFSC      STATUS, 0
0x0114	0x2959      	GOTO       L_main34
;The_project_code.c,147 :: 		if (flag)
0x0115	0x082C      	MOVF       _flag, 0
0x0116	0x1903      	BTFSC      STATUS, 2
0x0117	0x291F      	GOTO       L_main36
;The_project_code.c,149 :: 		flag = 0;
0x0118	0x01AC      	CLRF       _flag
;The_project_code.c,150 :: 		Switch();
0x0119	0x2041      	CALL       _Switch
;The_project_code.c,151 :: 		if(switch_flag)
0x011A	0x0821      	MOVF       _switch_flag, 0
0x011B	0x1903      	BTFSC      STATUS, 2
0x011C	0x291E      	GOTO       L_main37
;The_project_code.c,153 :: 		break;
0x011D	0x2959      	GOTO       L_main34
;The_project_code.c,154 :: 		}
L_main37:
;The_project_code.c,157 :: 		goto loop_23s;
0x011E	0x290F      	GOTO       ___main_loop_23s
;The_project_code.c,159 :: 		}
L_main36:
;The_project_code.c,161 :: 		if (counter > 3) // The first 20 s the west is green and south is red
0x011F	0x0829      	MOVF       _counter, 0
0x0120	0x3C03      	SUBLW      3
0x0121	0x1803      	BTFSC      STATUS, 0
0x0122	0x2926      	GOTO       L_main39
;The_project_code.c,163 :: 		portB = south_R_west_G;
0x0123	0x0824      	MOVF       _south_R_west_G, 0
0x0124	0x0086      	MOVWF      PORTB
;The_project_code.c,164 :: 		}
0x0125	0x2928      	GOTO       L_main40
L_main39:
;The_project_code.c,167 :: 		portB = south_R_west_Y;
0x0126	0x0823      	MOVF       _south_R_west_Y, 0
0x0127	0x0086      	MOVWF      PORTB
;The_project_code.c,168 :: 		}
L_main40:
;The_project_code.c,170 :: 		for (sec = 0; sec < 5; sec++)
0x0128	0x01AB      	CLRF       _sec
L_main41:
0x0129	0x3005      	MOVLW      5
0x012A	0x022B      	SUBWF      _sec, 0
0x012B	0x1803      	BTFSC      STATUS, 0
0x012C	0x2957      	GOTO       L_main42
;The_project_code.c,172 :: 		left = counter / 10;      // 15 --> 15 / 10 = 1
0x012D	0x300A      	MOVLW      10
0x012E	0x00F4      	MOVWF      R4
0x012F	0x0829      	MOVF       _counter, 0
0x0130	0x00F0      	MOVWF      R0
0x0131	0x201D      	CALL       _Div_8X8_U
0x0132	0x0870      	MOVF       R0, 0
0x0133	0x00AE      	MOVWF      _left
;The_project_code.c,173 :: 		right = counter % 10;     // 15 --> 15 % 10 = 5
0x0134	0x300A      	MOVLW      10
0x0135	0x00F4      	MOVWF      R4
0x0136	0x0829      	MOVF       _counter, 0
0x0137	0x00F0      	MOVWF      R0
0x0138	0x201D      	CALL       _Div_8X8_U
0x0139	0x0878      	MOVF       R8, 0
0x013A	0x00F0      	MOVWF      R0
0x013B	0x0870      	MOVF       R0, 0
0x013C	0x00AD      	MOVWF      _right
;The_project_code.c,174 :: 		portD = 0b00000001;
0x013D	0x3001      	MOVLW      1
0x013E	0x0088      	MOVWF      PORTD
;The_project_code.c,175 :: 		portC = right;
0x013F	0x0870      	MOVF       R0, 0
0x0140	0x0087      	MOVWF      PORTC
;The_project_code.c,176 :: 		delay_ms(15);
0x0141	0x3027      	MOVLW      39
0x0142	0x00FC      	MOVWF      R12
0x0143	0x30F5      	MOVLW      245
0x0144	0x00FD      	MOVWF      R13
L_main44:
0x0145	0x0BFD      	DECFSZ     R13, 1
0x0146	0x2945      	GOTO       L_main44
0x0147	0x0BFC      	DECFSZ     R12, 1
0x0148	0x2945      	GOTO       L_main44
;The_project_code.c,177 :: 		portD = 0b00000010;
0x0149	0x3002      	MOVLW      2
0x014A	0x0088      	MOVWF      PORTD
;The_project_code.c,178 :: 		portC = left;
0x014B	0x082E      	MOVF       _left, 0
0x014C	0x0087      	MOVWF      PORTC
;The_project_code.c,179 :: 		delay_ms(15);
0x014D	0x3027      	MOVLW      39
0x014E	0x00FC      	MOVWF      R12
0x014F	0x30F5      	MOVLW      245
0x0150	0x00FD      	MOVWF      R13
L_main45:
0x0151	0x0BFD      	DECFSZ     R13, 1
0x0152	0x2951      	GOTO       L_main45
0x0153	0x0BFC      	DECFSZ     R12, 1
0x0154	0x2951      	GOTO       L_main45
;The_project_code.c,170 :: 		for (sec = 0; sec < 5; sec++)
0x0155	0x0AAB      	INCF       _sec, 1
;The_project_code.c,180 :: 		}
0x0156	0x2929      	GOTO       L_main41
L_main42:
;The_project_code.c,145 :: 		for (counter = 23; counter > 0; counter--)
0x0157	0x03A9      	DECF       _counter, 1
;The_project_code.c,181 :: 		}
0x0158	0x2911      	GOTO       L_main33
L_main34:
;The_project_code.c,183 :: 		goto loop_15s;
0x0159	0x28C5      	GOTO       ___main_loop_15s
;The_project_code.c,184 :: 		}
L_end_main:
0x015A	0x295A      	GOTO       $+0
; end of _main
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0004      [25]    _interrupt
0x001D      [17]    _Div_8X8_U
0x002E       [7]    _____DoICP
0x0035      [12]    ___CC2DW
0x0041      [90]    _Switch
0x009B     [192]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    INDF
0x0002       [1]    PCL
0x0003       [1]    STATUS
0x0004       [1]    FSR
0x0005       [1]    PORTA
0x0006       [1]    PORTB
0x0007       [1]    PORTC
0x0008       [1]    PORTD
0x000A       [1]    PCLATH
0x000B       [0]    RBIE_bit
0x000B       [0]    GIE_bit
0x000B       [0]    RBIF_bit
0x0020       [1]    _south_G_west_R
0x0021       [1]    _switch_flag
0x0022       [1]    _south_Y_west_R
0x0023       [1]    _south_R_west_Y
0x0024       [1]    _south_R_west_G
0x0025       [1]    _j
0x0026       [2]    ___DoICPAddr
0x0028       [1]    _i
0x0029       [1]    _counter
0x002A       [1]    _x
0x002B       [1]    _sec
0x002C       [1]    _flag
0x002D       [1]    _right
0x002E       [1]    _left
0x002F       [1]    ___saveSTATUS
0x0030       [1]    ___savePCLATH
0x0070       [1]    R0
0x0071       [1]    R1
0x0072       [1]    R2
0x0073       [1]    R3
0x0074       [1]    R4
0x0075       [1]    R5
0x0076       [1]    R6
0x0077       [1]    R7
0x0078       [1]    R8
0x0079       [1]    R9
0x007A       [1]    R10
0x007B       [1]    R11
0x007C       [1]    R12
0x007D       [1]    R13
0x007E       [1]    R14
0x007F       [1]    R15
0x0081       [0]    NOT_RBPU_bit
0x0085       [1]    TRISA
0x0086       [1]    TRISB
0x0087       [1]    TRISC
0x0088       [1]    TRISD
0x009F       [1]    ADCON1
//** Label List: ** 
//----------------------------------------------
  L_Switch0
  L_Switch1
  L_Switch2
  L_Switch3
  L_Switch4
  L_Switch5
  L_Switch6
  L_Switch7
  L_Switch8
  L_Switch9
  L_Switch10
  L_Switch11
  L_Switch12
  L_Switch13
  L_interrupt14
  L_interrupt15
  L_interrupt16
  L_interrupt17
  L_main18
  L_main19
  ___main_loop_15s
  L_main20
  L_main21
  L_main22
  L_main23
  L_main24
  L_main25
  L_main26
  L_main27
  L_main28
  L_main29
  L_main30
  L_main31
  L_main32
  ___main_loop_23s
  L_main33
  L_main34
  L_main35
  L_main36
  L_main37
  L_main38
  L_main39
  L_main40
  L_main41
  L_main42
  L_main43
  L_main44
  L_main45
  L__interrupt46
  L_end_Switch
  _Switch
  L_end_interrupt
  _interrupt
  L__interrupt49
  L_end_main
  _main
  L_Div_16x16_S0
  L_Div_16x16_S1
  LOOPS3232A
  SADD22LA
  SOK22LA
  SADD22L8
  SOK22L8
  LOOPS3232B
  SADD22LB
  SOK22LB
  SADD22L16
  SOK22L16
  LOOPS3232C
  SADD22LC
  SOK22LC
  SADD22L24
  SOK22L24
  LOOPS3232D
  SADD22LD
  SOK22LD
  SOK22L
  L_Div_32x32_S6
  L_Div_32x32_S7
  L_Div_32x32_S8
  L_Div_32x32_S9
  FXD3232S
  END_ALL
  CA3232S
  C3232SX
  C3232SX1
  C3232S
  C3232S2
  C3232SX4
  C3232SOK
  C3232SX3
  C3232SX2
  avoid_comfrem
  LOOPU3232A
  UADD22LA
  UOK22LA
  UADD22L8
  UOK22L8
  LOOPU3232B
  UADD22LB
  UOK22LB
  UADD22L16
  UOK22L16
  LOOPU3232C
  UADD22LC
  UOK22LC
  UADD22L24
  UOK22L24
  LOOPU3232D
  UADD22LD
  UOK22LD
  UOK22L
  _NEXT
  _EXIT2
  _LOOP
  _EXIT1
  _IF_FIRST
  _IF_SECOND
  _INVERCE_FIRST
  _MULT
  _INBERSE_SECOND
  _EXIT
  L_end_Mul_8X8_U
  _Mul_8X8_U
  L_end_Mul_16X16_U
  _Mul_16X16_U
  L_end_Div_8X8_U
  _Div_8X8_U
  L_end_Div_16X16_U
  _Div_16X16_U
  L_end_Mul_8X8_S
  _Mul_8X8_S
  L_end_Mul_16X16_S
  _Mul_16X16_S
  L_end_Div_16x16_S_L
  _Div_16x16_S_L
  L_end_Div_16x16_S
  _Div_16x16_S
  L_end_Div_8X8_S
  _Div_8X8_S
  L_end_SDIV3232L
  _SDIV3232L
  L_end_COMFREM
  _COMFREM
  L_end_Div_32x32_S
  _Div_32x32_S
  L_end_Div_32x32_U
  _Div_32x32_U
  L_end_Mul_32x32_U
  _Mul_32x32_U
  L_end_Mul_32x32_S
  _Mul_32x32_S
  L_loopCA2AWs
  L_CA2AWend
  _CCA2AW_Loop1
  L_loopCS2Ss
  L_CS2Send
  _CCS2S_Loop1
  L_CCS2Send
  L_loopFZinSWs
  L_FZinSend
  _CC2D_Loop1
  L_end_____DoICP
  _____DoICP
  L_end_____DoIFC
  _____DoIFC
  L_end___CA2AW
  ___CA2AW
  L_end___CCA2AW
  ___CCA2AW
  L_end___CS2S
  ___CS2S
  L_end___CCS2S
  ___CCS2S
  L_end___FZinS
  ___FZinS
  L_end___CC2DW
  ___CC2DW
  L_end_Swap
  _Swap
  L_Switch0
  L_Switch1
  L_Switch2
  L_Switch3
  L_Switch4
  L_Switch5
  L_Switch6
  L_Switch7
  L_Switch8
  L_Switch9
  L_Switch10
  L_Switch11
  L_Switch12
  L_Switch13
  L_interrupt14
  L_interrupt15
  L_interrupt16
  L_interrupt17
  L_main18
  L_main19
  ___main_loop_15s
  L_main20
  L_main21
  L_main22
  L_main23
  L_main24
  L_main25
  L_main26
  L_main27
  L_main28
  L_main29
  L_main30
  L_main31
  L_main32
  ___main_loop_23s
  L_main33
  L_main34
  L_main35
  L_main36
  L_main37
  L_main38
  L_main39
  L_main40
  L_main41
  L_main42
  L_main43
  L_main44
  L_main45
  L__interrupt46
  L_end_Switch
  _Switch
  L_end_interrupt
  _interrupt
  L__interrupt49
  L_end_main
  _main
